services:
  prowlarr:  # index manager (from where to torrent)
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "${TZ}"
    volumes:
      - ${DOCKERDIR}/arr/prowlarr:/config
      - ${QBITTORRENT_DOWNLOAD_LOCATION}:/data/downloads
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${HOST_DOMAIN}`)"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    networks:
      - traefik_net

  qbittorrent:  # torrent client
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "${TZ}"
      WEBUI_PORT: 8080
      TORRENTING_PORT: 6881
    volumes:
      - ${DOCKERDIR}/arr/qbittorrent:/config
      - ${QBITTORRENT_DOWNLOAD_LOCATION}:/data/downloads
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent.rule=Host(`torrent.${HOST_DOMAIN}`)"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
    restart: unless-stopped
    networks:
      - traefik_net

  sonarr: # for TV shows
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "${TZ}"
    volumes:
      - ${DOCKERDIR}/arr/sonarr:/config
      - ${TVSHOWS_LOCATION}:/data/tvshows #optional where the tv shows are gonna be stored
      - ${QBITTORRENT_DOWNLOAD_LOCATION}:/data/downloads #optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${HOST_DOMAIN}`)"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: unless-stopped
    networks:
      - traefik_net

  radarr:  # for movies
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "${TZ}"
    volumes:
      - ${DOCKERDIR}/arr/radarr:/config
      - ${MOVIES_LOCATION}:/data/movies #optional
      - ${QBITTORRENT_DOWNLOAD_LOCATION}:/data/downloads #optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${HOST_DOMAIN}`)"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    restart: unless-stopped
    networks:
      - traefik_net

  lidarr:  # for music
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "${TZ}"
    volumes:
      - ${DOCKERDIR}/arr/lidarr:/config
      - ${MUSIC_LOCATION}:/data/music #optional
      - ${QBITTORRENT_DOWNLOAD_LOCATION}:/data/downloads #optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.${HOST_DOMAIN}`)"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
    restart: unless-stopped
    networks:
      - traefik_net

  readarr:  # for books
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "${TZ}"
    volumes:
      - ${DOCKERDIR}/arr/readarr:/config
      - ${BOOKS_LOCATION}:/data/books #optional
      - ${QBITTORRENT_DOWNLOAD_LOCATION}:/data/downloads #optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.readarr.entrypoints=websecure"
      - "traefik.http.routers.readarr.rule=Host(`readarr.${HOST_DOMAIN}`)"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
    restart: unless-stopped
    networks:
      - traefik_net

  jellyfin:  # media streaming server aka plex
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      PUID: 1000
      PGID: 1000
      TZ: "${TZ}"
      JELLYFIN_PublishedServerUrl: "stream.${HOST_DOMAIN}"  # optional
    volumes:
      - ${DOCKERDIR}/arr/jellyfin:/config
      - ${TVSHOWS_LOCATION}:/data/tvshows
      - ${MOVIES_LOCATION}:/data/movies
      - ${MUSIC_LOCATION}:/data/music
      - ${BOOKS_LOCATION}:/data/books
    #ports:
      #- 8920:8920 #optional Https webUI
      #- 7359:7359/udp #optional Allows clients to discover Jellyfin on the local network
      #- 1900:1900/udp #optional Service discovery used by DNLA and clients.
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.rule=Host(`stream.${HOST_DOMAIN}`)"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    restart: unless-stopped
    networks:
      - traefik_net
