version: '3'
#https://immich.app/docs/install/environment-variables

networks:
  traefik_net: { }
  immich-db: { }

services:
  immich-server:
    container_name: immich
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    command: ["start.sh", "immich"]
    volumes:
      - ${IMMICH_UPLOAD_LOCATION:-./etc/immich/upload}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    networks:
      - traefik_net
      - immich-db
    user: "1000"
    environment:
      - PGID=${PGID:-1000}
      - PUID=${PUID:-1000}
      - DB_PASSWORD=${IMMICH_POSTGRES_PASSWORD:-123456}
      - DB_HOSTNAME=${IMMICH_DB_HOSTNAME:-immich_database}
      - DB_USERNAME=${IMMICH_POSTGRES_USER:-postgres}
      - DB_DATABASE_NAME=${IMMICH_POSTGRES_DB:-immich}
      - REDIS_HOSTNAME=${IMMICH_REDIS_CONTAINER_NAME:-immich_redis}
      - UPLOAD_LOCATION=${IMMICH_UPLOAD_LOCATION:-./etc/immich/upload}
      - TYPESENSE_API_KEY=${IMMICH_TYPESENSE_API_KEY:-changeme}
    depends_on:
      - redis
      - database
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.immich.entrypoints=websecure
      - traefik.http.routers.immich.rule=Host(`photos.${HOST_DOMAIN}`)
      #- traefik.http.services.immich.loadbalancer.server.scheme=https # enable if the service wants to connect over https
      - traefik.http.services.immich.loadbalancer.server.port=3001

  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.yml
    #   service: hwaccel
    command: ["start.sh", "microservices"]
    restart: ${IMMICH_RESTART_POLICY:-unless-stopped}
    networks:
      - immich-db
    user: "1000"
    environment:
      - PGID=${PGID:-1000}
      - PUID=${PUID:-1000}
      - DB_DATABASE_NAME=${IMMICH_POSTGRES_DB:-immich}
      - DB_HOSTNAME=${IMMICH_DB_HOSTNAME:-immich_database}
      - DB_USERNAME=${IMMICH_POSTGRES_USER:-postgres}
      - DB_PASSWORD=${IMMICH_POSTGRES_PASSWORD:-123456}
      - REDIS_HOSTNAME=${IMMICH_REDIS_CONTAINER_NAME:-immich_redis}
      - TZ=${TZ:-America/New_York}
      - TYPESENSE_API_KEY=${IMMICH_TYPESENSE_API_KEY:-changeme}
      - UPLOAD_LOCATION=${IMMICH_UPLOAD_LOCATION:-./etc/immich/upload}
    volumes:
      - ${IMMICH_UPLOAD_LOCATION:-./etc/immich/upload}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - redis
      - database

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    networks:
      - immich-db
    volumes:
      - ${IMMICH_MODEL_CACHE_DIR:-./etc/immich/model-cache}:/cache
    restart: ${IMMICH_RESTART_POLICY:-unless-stopped}

  redis:
    container_name: immich_redis
    networks:
      - immich-db
    image: redis:6.2-alpine@sha256:80cc8518800438c684a53ed829c621c94afd1087aaeb59b0d4343ed3e7bcf6c5
    restart: ${IMMICH_RESTART_POLICY:-unless-stopped}


  database:
    container_name: immich_database
    image: tensorchord/pgvecto-rs:pg14-v0.1.11
    networks:
      - immich-db
    # user: "1000"
    environment:
      - PGID=${PGID:-1000}
      - PUID=${PUID:-1000}
      - POSTGRES_PASSWORD=${IMMICH_POSTGRES_PASSWORD:-123456}
      - POSTGRES_USER=${IMMICH_POSTGRES_USER:-postgres}
      - POSTGRES_DB=${IMMICH_POSTGRES_DB:-immich}
    volumes:
      - ${IMMICH_POSTGRES_DB_DIR:-./etc/immich/db}:/var/lib/postgresql/data
    restart: ${IMMICH_RESTART_POLICY:-unless-stopped}


  # backup:
  #   container_name: immich_db_backup
  #   image: prodrigestivill/postgres-backup-local
  #   environment:
  #     - POSTGRES_HOST= ${IMMICH_DB_HOSTNAME:-immich_database}
  #     - POSTGRES_DB= ${IMMICH_POSTGRES_DB:-immich}
  #     - POSTGRES_USER= ${IMMICH_POSTGRES_USER:-postgres}
  #     - POSTGRES_PASSWORD= ${IMMICH_POSTGRES_PASSWORD:-123456}
  #     - SCHEDULE= ${IMMICH_BACKUP_SCHEDULE:-"@daily"}
  #     - BACKUP_NUM_KEEP= ${IMMICH_BACKUP_RETENTION:-7}
  #     - BACKUP_DIR= /db_dumps
  #   volumes:
  #     - ${IMMICH_POSTGRES_DB_BACKUP_DIR:-./etc/immich/db-dump}:/db_dumps
  #   depends_on:
  #     - database