
# Do not edit this file directly. Use a ‘docker-compose.override.yaml’ file if you can.
# Refer to `docker-compose.override.yaml.example’ for some sample configurations.

services:
  chat-api:
    container_name: LibreChat
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.librechat.entrypoints=websecure"
      - "traefik.http.routers.librechat.tls=true"
      - "traefik.http.routers.librechat.rule=Host(`chat.${HOST_DOMAIN}`)"
      - "traefik.http.services.librechat.loadbalancer.server.port=3080"
      - 'traefik.docker.network=traefik-public'
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - 'traefik-public'
      - 'chat_net'
    depends_on:
      - chat-mongodb
      - chat-rag_api
    image: ghcr.io/danny-avila/librechat-dev:latest
    restart: always
    user: "1000:1000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - HOST=0.0.0.0
      - MONGO_URI=mongodb://chat-mongodb:27017/LibreChat
      - MEILI_HOST=http://chat-meilisearch:7700
      - RAG_PORT=${RAG_PORT:-8000}
      - RAG_API_URL=http://chat-rag_api:${RAG_PORT:-8000}
    volumes:
      - type: bind
        source: ./services/librechat/.env
        target: /app/.env
      - ${DOCKERDIR}/librechat_data/images:/app/client/public/images
      - ${DOCKERDIR}/librechat_data/logs:/app/api/logs
    env_file:
      - ./services/librechat/.env

  chat-mongodb:
    container_name: LibreChat-mongodb
    image: mongo
    restart: always
    user: "1000:1000"
    volumes:
      - ${DOCKERDIR}/librechat_data/data-node:/data/db
    command: mongod --noauth
    env_file:
      - ./services/librechat/.env
    networks:
      - 'chat_net'

  chat-meilisearch:
    container_name: LibreChat-meilisearch
    image: getmeili/meilisearch:v1.7.3
    restart: always
    user: "1000:1000"
    environment:
      - MEILI_HOST=http://chat-meilisearch:7700
      - MEILI_NO_ANALYTICS=true
    volumes:
      - ${DOCKERDIR}/librechat_data/meili_data_v1.7:/meili_data
    env_file:
      - ./services/librechat/.env
    networks:
      - 'chat_net'

  chat-vectordb:
    container_name: LibreChat-vectordb
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    restart: always
    volumes:
      - ${DOCKERDIR}/librechat_data/pgdata2:/var/lib/postgresql/data
    env_file:
      - ./services/librechat/.env
    networks:
      - 'chat_net'

  chat-rag_api:
    container_name: LibreChat-rag_api
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    environment:
      - DB_HOST=chat-vectordb
      - RAG_PORT=${RAG_PORT:-8000}
    restart: always
    depends_on:
      - chat-vectordb
    env_file:
      - ./services/librechat/.env
    networks:
      - 'chat_net'

networks:
  chat_net:
    driver: bridge   # Internal network that isolates microservices not exposed to the public
