services:

  nocodb:
    container_name: nocodb
    depends_on:
      - nocodb-db
    environment:
      - "NC_DB=pg://nocodb-db:5432?u=${NOCODB_DATABASE_USER}&p=${NOCODB_DATABASE_PW}&d=${NOCODB_DATABASE_NAME}"
      - "NC_PUBLIC_URL=https://nocodb.${HOST_DOMAIN}"
      - NC_DISABLE_TELE=true
      - NC_S3_ENDPOINT=https://s3.mercantus.ch
      - NC_S3_BUCKET_NAME=nocodb
      - NC_S3_ACCESS_KEY=minio
      - NC_S3_ACCESS_SECRET=minio123
      - NC_S3_REGION=us-east-1
      - NC_S3_FORCE_PATH_STYLE=true
    image: "nocodb/nocodb:latest"
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.nocodb.entrypoints=websecure
      - "traefik.http.routers.nocodb.rule=Host(`nocodb.${HOST_DOMAIN}`)"
      - traefik.http.services.nocodb.loadbalancer.server.scheme=http
      - traefik.http.services.nocodb.loadbalancer.server.port=8080
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - nocodb_net
      - traefik-public
    restart: always
    volumes:
      - "${DOCKERDIR}/nocodb/nocodb:/usr/app/data"

  nocodb-db:
    container_name: nocodb-db
    environment:
      POSTGRES_DB: "${NOCODB_DATABASE_NAME}"
      POSTGRES_PASSWORD: "${NOCODB_DATABASE_PW}"
      POSTGRES_USER: "${NOCODB_DATABASE_USER}"
    healthcheck:
      interval: 10s
      retries: 10
      test: "pg_isready -U ${NOCODB_DATABASE_USER} -d ${NOCODB_DATABASE_NAME}"
      timeout: 2s
    image: "postgres:12.17-alpine"
    networks:
      - nocodb_net
    restart: always
    volumes:
      - "${DOCKERDIR}/nocodb/db:/var/lib/postgresql/data"

networks:
  traefik-public:
    external: true
  nocodb_net: {}