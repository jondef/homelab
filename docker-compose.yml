version: '3.8'

services:
  traefik:
    image: traefik:v2.10.7
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"  # allow without providing ssl certificate
      - "--providers.docker=true" # enable docker as provider
      - "--api.dashboard=true"  # enable dashboard
      - "--providers.docker.exposedbydefault=false"  # do not expose every container, only those with labels
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/etc/traefik/dynamic/traefik.yaml:ro  # mount dynamic configuration file
      - ~/.certs:/etc/certs/:ro
    restart: always
    networks:
      - traefik_net
    labels: # labels for traefik itself, for dashboard
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"

      - "traefik.http.routers.traefik_https.rule=Host(`traefik.jondef.me`)"
      - "traefik.http.routers.traefik_https.entrypoints=websecure"
      - "traefik.http.routers.traefik_https.tls=true"

      - "traefik.http.routers.traefik_https.service=api@internal"
      - "traefik.http.routers.traefik_https.middlewares=traefik-auth"

      # generate with htpasswd -nb admin password (dollar signs need to be doubled)
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$1XqOGJR7$$uzAsayMj.Nk0.DHP5UYe51"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.jondef.me`)"
      - "traefik.http.routers.monica.service=portainer@docker"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.services.portainer.loadbalancer.server.scheme=http"
    networks:
      - traefik_net
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  hugo-server:
    container_name: hugo-server
    image: nginx:alpine
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.hugo-server.entrypoints=websecure"
      - "traefik.http.routers.hugo-server.tls=true"
      - "traefik.http.routers.hugo-server.rule=Host(`jondef.me`)"
      - "traefik.http.services.hugo-server.loadbalancer.server.port=80"
    volumes:
      - hugo_public:/usr/share/nginx/html:ro
    restart: unless-stopped
    depends_on:
      - hugo-compile
    networks:
      - traefik_net

  hugo-compile:
    container_name: hugo-compile
    build:
      context: ./hugo
    command: hugo
    volumes:
      - hugo_public:/src/public:wr
    restart: "no"

  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`vaultwarden.jondef.me`)"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"
    volumes:
      - ~/vaultwarden-data/:/data/
    restart: unless-stopped
    networks:
      - traefik_net

  stirling:
    container_name: stirling
    image: frooodle/s-pdf:latest
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.stirling.entrypoints=websecure"
      - "traefik.http.routers.stirling.tls=true"
      - "traefik.http.routers.stirling.rule=Host(`pdf.jondef.me`)"
      - "traefik.http.services.stirling.loadbalancer.server.port=8080"
    volumes:
      - ~/stirling-data/trainingData:/usr/share/tesseract-ocr/5/tessdata #Required for extra OCR languages
      - ~/stirling-data/extraConfigs:/configs
      - ~/stirling-data/customFiles:/customFiles/
      - ~/stirling-data/logs:/logs/
    restart: unless-stopped
    networks:
      - traefik_net

  # region photoprism
  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.photoprism.entrypoints=websecure"
      - "traefik.http.routers.photoprism.tls=true"
      - "traefik.http.routers.photoprism.rule=Host(`photos.jondef.me`)"
      - "traefik.http.services.photoprism.loadbalancer.server.port=2342"
    environment:
      PHOTOPRISM_INIT: "https"
      PHOTOPRISM_UID: ${UID:-1000}                         # user id, should match your host user id
      PHOTOPRISM_GID: ${GID:-1000}                         # group id
      PHOTOPRISM_ADMIN_USER: "admin"                       # admin login username
      PHOTOPRISM_ADMIN_PASSWORD: "photoprism"              # initial admin password (8-72 characters)
      PHOTOPRISM_AUTH_MODE: "password"                     # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: "https://latest.localssl.dev/"  # server URL in the format "http(s)://domain.name(:port)/(path)"
      PHOTOPRISM_SITE_CAPTION: "Latest"
      PHOTOPRISM_SITE_DESCRIPTION: "Tags and finds pictures without getting in your way!"
      PHOTOPRISM_SITE_AUTHOR: "@photoprism_app"
      PHOTOPRISM_DEBUG: "true"
      PHOTOPRISM_READONLY: "false"
      PHOTOPRISM_EXPERIMENTAL: "false"
      PHOTOPRISM_HTTP_MODE: "debug"
      PHOTOPRISM_HTTP_HOST: "0.0.0.0"
      PHOTOPRISM_HTTP_PORT: 2342
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"                  # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DATABASE_DRIVER: "mysql"
      PHOTOPRISM_DATABASE_SERVER: "mariadb:4001"
      PHOTOPRISM_DATABASE_NAME: "photoprism"
      PHOTOPRISM_DATABASE_USER: "root"
      PHOTOPRISM_DATABASE_PASSWORD: "photoprism"
      PHOTOPRISM_DISABLE_CHOWN: "false"       # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_BACKUPS: "false"     # disables backing up albums and photo metadata to YAML files
      PHOTOPRISM_DISABLE_WEBDAV: "false"      # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"    # disables settings UI and API
      PHOTOPRISM_DISABLE_PLACES: "false"      # disables reverse geocoding and maps
      PHOTOPRISM_DISABLE_EXIFTOOL: "false"    # disables creating JSON metadata sidecar files with ExifTool
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"  # disables all features depending on TensorFlow
      PHOTOPRISM_DETECT_NSFW: "false"         # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "false"         # allows uploads that MAY be offensive (no effect without TensorFlow)
      PHOTOPRISM_RAW_PRESETS: "false"         # enables applying user presets when converting RAW images (reduces performance)
      PHOTOPRISM_THUMB_FILTER: "lanczos"      # resample filter, best to worst: blackman, lanczos, cubic, linear
      PHOTOPRISM_THUMB_UNCACHED: "true"       # enables on-demand thumbnail rendering (high memory and cpu usage)
      PHOTOPRISM_THUMB_SIZE: 2048             # pre-rendered thumbnail size limit (default 2048, min 720, max 7680)
      # PHOTOPRISM_THUMB_SIZE: 4096           # Retina 4K, DCI 4K (requires more storage); 7680 for 8K Ultra HD
      PHOTOPRISM_THUMB_SIZE_UNCACHED: 7680    # on-demand rendering size limit (default 7680, min 720, max 7680)
      PHOTOPRISM_JPEG_SIZE: 7680              # size limit for converted image files in pixels (720-30000)
      PHOTOPRISM_JPEG_QUALITY: 85             # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      TF_CPP_MIN_LOG_LEVEL: 0                 # show TensorFlow log messages for development
    working_dir: "/photoprism"
    volumes:
      - "./storage:/photoprism/storage"
      - "./storage/originals:/photoprism/originals"
    restart: unless-stopped
    networks:
      - traefik_net
      - photoprism_db
    depends_on:
        - mariadb
        - traefik

  mariadb:
    image: mariadb:11
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: --port=4001 --innodb-strict-mode=1 --innodb-buffer-pool-size=256M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "photoprism"
      MARIADB_ROOT_PASSWORD: "photoprism"
    networks:
      - photoprism_db
  # endregion

  # region monica
  monica:
    image: monica
    depends_on:
      - mysql
      - traefik
    environment:
      - DB_HOST=mysql
      - APP_ENV=production
      - APP_URL=https://monica.jondef.me/
      - DB_DATABASE=monica
      - DB_USERNAME=homestead
      - DB_PASSWORD=secret
      - LOG_CHANNEL=stderr
      - CACHE_DRIVER=database
      - SESSION_DRIVER=database
      - QUEUE_DRIVER=sync
    restart: unless-stopped
    volumes:
      - monica_data:/var/www/html/storage
    networks:
      - monica_net
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.monica.entrypoints=websecure"
      - "traefik.http.routers.monica.tls=true"
      - "traefik.http.routers.monica.rule=Host(`monica.jondef.me`)"
      - "traefik.http.routers.monica.service=monica@docker"
      - "traefik.http.services.monica.loadbalancer.server.port=80"

  mysql:
    image: mysql:5.7
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=true
      - MYSQL_DATABASE=monica
      - MYSQL_USER=homestead
      - MYSQL_PASSWORD=secret
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    networks:
      - monica_net
  # endregion

  #minecraft:
  #  container_name: minecraft
  #  image: itzg/minecraft-server
  #  labels:
  #    - "traefik.enable=true"
  #    - "traefik.docker.network=traefik_net"
  #
  #    - "traefik.udp.routers.minecraft.entrypoints=minecraft"
  #    - "traefik.udp.routers.minecraft.service=minecraft"
  #    - "traefik.udp.services.minecraft.loadbalancer.server.port=25565"
  #  tty: true
  #  stdin_open: true
  #  environment:
  #    EULA: "TRUE"
  #    MEMORY: "2G"
  #    JVM_OPTS: "-Xmx2000M -Xms2000M"
  #    STOP_SERVER_ANNOUNCE_DELAY: "5"
  #    MOTD: "A §l§cMinecraft§r §nserver"
  #    DIFFICULTY: "hard"
  #    MAX_PLAYERS: "5"
  #    OPS: |
  #      16b17019-454d-4332-8c52-dfd3440874b7
  #    WHITELIST_ENABLED: "true"
  #    WHITE_LIST: |
  #      33d70dfd-cf46-42df-ba02-cf747c40a5fa, GeorgeSwiss
  #      16b17019-454d-4332-8c52-dfd3440874b7, BoLo_
  #  volumes:
  #    - ~/minecraft_data/:/data
  #  restart: unless-stopped
  #  networks:
  #    - traefik_net

volumes:
  hugo_public: { }
  monica_data: { }
  mysql_data: { }
  mariadb_data: { }
  portainer_data: { }

networks:
  traefik_net: { }
  monica_net:
    driver: bridge
  photoprism_db:
      driver: bridge
